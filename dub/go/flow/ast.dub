import (
  "go/core"
)

struct Register scoped {
  Name string
  T core.GoType
}

struct FlowFunc scoped contains(Register) {
  Function core.Function
  Recv Register
  Params []Register
  Results []Register
  CFG graph
  Ops []GoOp
}

struct GoOp {
}

struct ConstantNil implements GoOp {
  Dst Register
}

struct ConstantInt implements GoOp {
  Value int64
  Dst Register
}

struct ConstantBool implements GoOp {
  Value bool
  Dst Register
}

struct ConstantRune implements GoOp {
  Value rune
  Dst Register
}

struct ConstantString implements GoOp {
  Value string
  Dst Register
}

struct BinaryOp implements GoOp {
  Left Register
  Op string
  Right Register
  Dst Register
}

struct Attr implements GoOp {
  Expr Register
  Name string
  Dst Register
}

// TODO reference to function.
struct Call implements GoOp {
  Name string
  Args []Register
  Dsts []Register
}

struct MethodCall implements GoOp {
  Expr Register
  Name string
  Args []Register
  Dsts []Register
}

struct NamedArg {
  Name string
  Arg Register
}

struct ConstructStruct implements GoOp {
  Type core.StructType
  AddrTaken bool
  Args []NamedArg
  Dst Register
}

struct ConstructSlice implements GoOp {
  Type core.SliceType
  Args []Register
  Dst Register
}

struct Coerce implements GoOp {
  Src Register
  Type core.GoType
  Dst Register
}

struct Transfer implements GoOp {
  Srcs []Register
  Dsts []Register
}

struct Return implements GoOp {
  Args []Register
}

struct Nop implements GoOp {
}

struct Entry implements GoOp {
}

struct Switch implements GoOp {
  Cond Register
}

struct Exit implements GoOp {
}

struct FlowProgram contains (FlowFunc) {
  Packages []core.Package
  Types []core.GoType
  Builtins core.BuiltinTypeIndex
}