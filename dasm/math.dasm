struct IntLiteral {
  Text string
}

struct BinaryOp {
  Left IntLiteral
  Op string
  Right IntLiteral
}

func S () {
  star {
    define read c;
    if ne c ' ' {
      if ne c '\t' {
        if ne c '\r' {
          if ne c '\n' {
            fail;
          }
        }
      }
    }
  }
}

func Digits () {
  plus {
    define read c;
    if lt c '0' {
      fail;
    }
    if gt c '9' {
      fail;
    }
  }
}

func Integer (IntLiteral) {
  define slice {
    call Digits;
  } v;
  call S;
  return (cons IntLiteral(Text: v));
}

func Add (BinaryOp) {
  define call Integer l;
  define read c;
  if ne c '+' {
    fail;
  }
  call S;
  define call Integer r;
  return (cons BinaryOp(Left: l Op: "+" Right: r));
}
