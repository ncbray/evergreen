struct Expr {
}

struct IntLiteral implements Expr {
  Text string
}

struct BinaryOp implements Expr {
  Left Expr
  Op string
  Right Expr
}

func S () {
  star {
    define c read;
    if ne c ' ' {
      if ne c '\t' {
        if ne c '\r' {
          if ne c '\n' {
            fail;
          }
        }
      }
    }
  }
}

func Digits () {
  plus {
    define c read;
    if lt c '0' {
      fail;
    }
    if gt c '9' {
      fail;
    }
  }
}

func Integer (IntLiteral) {
  define v slice {
    call Digits;
  };
  call S;
  return (cons IntLiteral(Text: v));
}

func Add (Expr) {
  var e Expr;
  assign e call Integer;
  star {
    define c read;
    if ne c '+' {
      fail;
    }
    call S;
    define r call Integer;
    assign e cons BinaryOp(Left: e Op: "+" Right: r);
  }
  return (e);
}
