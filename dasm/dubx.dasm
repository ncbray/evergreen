struct TextMatch {
}

struct RuneFilter {
  Min rune
  Max rune
}

struct RuneMatch implements TextMatch {
  Filters []RuneFilter
}

func ParseRuneFilterRune (rune) {
  define c read;
  if eq c ']' {
    fail;
  }
  if eq c '-' {
    fail;
  }
  // TODO unescape
  return (c);
}

func ParseRuneFilter (RuneFilter) {
  define min call ParseRuneFilterRune;
  define max min;
  question {
    define c read;
    if ne c '-' {
      fail;
    }
    assign max call ParseRuneFilterRune;
  }
  return (cons RuneFilter(Min: min Max: max));
}

func MatchRune (RuneMatch) {
  define c read;
  if ne c '[' {
    fail;
  }
  define filters conl []RuneFilter()
  star {
    call ParseRuneFilter;
  }
  if ne read ']' {
    fail;
  }
  return (cons RuneMatch(Filters: filters))
}