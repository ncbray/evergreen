import (
  "dub/core"
)

struct TextMatch {
}

struct RuneFilter {
  Min rune
  Max rune
}

struct RuneRangeMatch implements TextMatch {
  Invert bool
  Filters []RuneFilter
}

struct StringLiteralMatch implements TextMatch {
  Value string
}

struct MatchSequence implements TextMatch {
  Matches []TextMatch
}

struct MatchChoice implements TextMatch {
  Matches []TextMatch
}

struct MatchRepeat implements TextMatch {
  Match TextMatch
  Min int
}

struct MatchLookahead implements TextMatch {
  Invert bool
  Match TextMatch
}

struct Id {
  Pos int
  Text string
}

struct ASTExpr {
}

struct RuneLiteral implements ASTExpr {
  Text string
  Value rune
}

struct StringLiteral implements ASTExpr {
  Pos int
  Text string
  Value string
}

struct IntLiteral implements ASTExpr {
  Text string
  Value int
}

struct Float32Literal implements ASTExpr {
  Text string
  Value float32
}

struct BoolLiteral implements ASTExpr {
  Text string
  Value bool
}

struct NilLiteral implements ASTExpr {
}

struct StringMatch implements ASTExpr {
   Match TextMatch
}

struct RuneMatch implements ASTExpr {
   Match RuneRangeMatch
}

struct ASTDecl {
}

struct ASTTypeRef {
}

struct TypeRef implements ASTTypeRef {
  Name Id
}

struct ListTypeRef implements ASTTypeRef {
  Type ASTTypeRef
}

struct QualifiedTypeRef implements ASTTypeRef {
  Package Id
  Name Id
}

struct GetType implements ASTTypeRef {
  Type core.DubType
}

struct Destructure {
}

struct DestructureValue implements Destructure {
  Expr ASTExpr
}

struct DestructureField {
  Name Id
  Destructure Destructure
}

struct DestructureStruct implements Destructure {
  Type ASTTypeRef
  Args []DestructureField
}

struct DestructureList implements Destructure {
  Type ASTTypeRef
  Args []Destructure
}

struct If implements ASTExpr {
  Expr ASTExpr
  Block []ASTExpr
  Else []ASTExpr
}

struct Repeat implements ASTExpr {
  Block []ASTExpr
  Min int
}

struct Choice implements ASTExpr {
  Blocks [][]ASTExpr
}

struct Optional implements ASTExpr {
  Block []ASTExpr
}

struct Assign implements ASTExpr {
  Expr ASTExpr
  Pos int
  Targets []ASTExpr
  Type ASTTypeRef
  Define bool
}

struct NameRef implements ASTExpr {
  Name Id
}

struct GetLocal implements ASTExpr {
  Info LocalInfo
}

struct SetLocal implements ASTExpr {
  Info LocalInfo
}

struct Discard implements ASTExpr {
}

struct GetFunction implements ASTExpr {
  Func core.Callable
}

struct GetFunctionTemplate implements ASTExpr {
  Template core.CallableTemplate
}

struct GetPackage implements ASTExpr {
  Package core.Package
}

struct NamedExpr {
  Name Id
  Expr ASTExpr
}

struct Construct implements ASTExpr {
  Type ASTTypeRef
  Args []NamedExpr
}

struct ConstructList implements ASTExpr {
  Type ASTTypeRef
  Args []ASTExpr
}

struct Coerce implements ASTExpr {
  Type ASTTypeRef
  Expr ASTExpr
}

struct Call implements ASTExpr {
  Expr ASTExpr
  Pos int
  Args []ASTExpr
  Target core.Callable
  T core.DubType
}

struct Selector implements ASTExpr {
  Expr ASTExpr
  Pos int
  Name Id
}

struct SpecializeTemplate implements ASTExpr {
  Expr ASTExpr
  Pos int
  Types []ASTTypeRef
}

struct Fail implements ASTExpr {
}

struct Return implements ASTExpr {
  Pos int
  Exprs []ASTExpr
}

struct BinaryOp implements ASTExpr {
  Left ASTExpr
  Op string
  OpPos int
  Right ASTExpr
  T core.DubType
}

struct TemplateParam {
  Name Id
}

struct FieldDecl {
  Name Id
  Type ASTTypeRef
}

struct StructDecl implements ASTDecl {
  Name Id
  Implements ASTTypeRef
  Fields []FieldDecl
  Scoped bool
  Contains []ASTTypeRef
  T core.StructType
}

struct LocalInfo scoped {
  Name string
  T core.DubType
}

struct Param {
  Name Id
  Type ASTTypeRef
  Info LocalInfo
}

struct FuncDecl contains(LocalInfo) implements ASTDecl {
  Name Id
  TemplateParams []TemplateParam
  Params []Param
  ReturnTypes []ASTTypeRef
  Block []ASTExpr
  F core.Function
}

struct Test {
  Name Id
  Rule ASTExpr
  Type core.DubType
  Input string
  Flow string // TODO enum
  Destructure Destructure
}

struct ImportDecl {
  Path StringLiteral
}

struct File {
  Name string
  Imports []ImportDecl
  Decls []ASTDecl
  Tests []Test
  F core.File
}

struct Package {
  Path []string
  Files []File
  P core.Package
}

struct Program {
  Builtins core.BuiltinTypeIndex
  Packages []Package
}
